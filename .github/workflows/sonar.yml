name: SonarQube

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17 (required for SonarQube)
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed by SonarCloud to correctly analyze diffs and history

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Sonar scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarScanner CLI (if not cached)
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool install --tool-path .\.sonar\scanner dotnet-sonarscanner

      - name: Begin Sonar analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"delower-hosen_EFCoreDemo" `
            /o:"delower-hosen" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Build solution
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release

      - name: End Sonar analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
